@using TrackerWasm.AuthProvider
@using TrackerWasm.Services
@inherits LayoutComponentBase
@inject PreloadService PreloadService
@inject NavigationManager NavigationManager
@inject CustomAuthStateProvider AuthenticationStateProvider
@inject UserService UserService

<BlazorBootstrapLayout StickyHeader="true">
    <HeaderSection>
        <ThemeSwitcher Class="ps-3 ps-lg-2"/>
        <Button @onclick="Logout" Color="ButtonColor.Link">Logout</Button>
    </HeaderSection>
    <SidebarSection>
        <Sidebar2 Href="/" ImageSrc="https://demos.blazorbootstrap.com/images/logo/logo-white.svg" Title="Tracker"
                  BadgeText="0.1" DataProvider="Sidebar2DataProvider" WidthUnit="Unit.Px"/>
    </SidebarSection>
    <ContentSection>
        @Body
    </ContentSection>
</BlazorBootstrapLayout>
<Preload LoadingText="Loading..."/>
<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.BottomRight"/>
<Modal IsServiceModal="true"/>

<ConfirmDialog @ref="_logoutDialog"/>

@code{

    private IEnumerable<NavItem> _navItems = default!;
    private ConfirmDialog _logoutDialog = default!;

    private async Task<Sidebar2DataProviderResult> Sidebar2DataProvider(Sidebar2DataProviderRequest request)
    {
        _navItems = GetNavItems();
        return await Task.FromResult(request.ApplyTo(_navItems));
    }

    private async Task Logout()
    {
        var confirmation = await _logoutDialog.ShowAsync(
            "Are you sure you want to logout?",
            "Confirm to logout"
        );
        if (confirmation)
        {
            PreloadService.Show(SpinnerColor.Light, "Logging out...");
            await UserService.Logout();
            await AuthenticationStateProvider.MarkUserAsLoggedOut();
            PreloadService.Hide();
            NavigationManager.NavigateTo("login");
        }
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        _navItems =
        [
            new NavItem { Id = "1", Href = "/comic", IconName = IconName.Book, Text = "Comic" },
            new NavItem { Id = "2", Href = "/comic/home", IconName = IconName.HouseDoorFill, Text = "Home", ParentId = "1" },
            new NavItem { Id = "3", Href = "/comic/add", IconName = IconName.Plus, Text = "Add", ParentId = "1" },
            new NavItem { Id = "4", Href = "/comic/import", IconName = IconName.Upload, Text = "Import", ParentId = "1" }
        ];

        return _navItems;
    }

}